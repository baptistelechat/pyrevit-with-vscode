{
  "pyRevit Full Template": {
    "prefix": ["pyrvt"],
    "body": [
      "# -*- coding: utf-8 -*-",
      "__title__ = \"${1:title}\" # Name of the button displayed in Revit UI",
      "__doc__ = \"\"\"",
      "Version = 1.0",
      "Date    = ${2:00}.${3:00}.${4:0000}",
      "_____________________________________________________________________",
      "Description:",
      "This is a template file for pyRevit Scripts. 🚀",
      "_____________________________________________________________________",
      "How-to:",
      "-> Click on the button 🖱️",
      "-> Change Settings(optional) ⚙️",
      "-> Make a change 🛠️",
      "_____________________________________________________________________",
      "Last update:",
      "- [${2:00}.${3:00}.${4:0000}] - 1.0 RELEASE",
      "_____________________________________________________________________",
      "To-Do:",
      "- ",
      "_____________________________________________________________________",
      "Author: ${5:John Doe}  👨‍💻\"\"\" # Button Description shown in Revit UI",
      "",
      "# EXTRA: You can remove them.",
      "__author__ = \"${5:John Doe}\" # Script's Author",
      "__helpurl__ = \"https://github.com/baptistelechat/pyrevit-with-vscode\" # Link that can be opened with F1 when hovered over the tool in Revit UI.",
      "__min_revit_ver__ = ${6:2020} # Limit your Scripts to certain Revit versions if it's not compatible due to RevitAPI Changes.",
      "__max_revit_ver = ${7:2024} # Limit your Scripts to certain Revit versions if it's not compatible due to RevitAPI Changes.",
      "# __highlight__ = \"new\" # Button will have an orange dot + Description in Revit UI (\"new\" | \"updated\"",
      "# __context__ = [ \"selection\", \"active-section-view\"] # Make it available only if Active view is Section and something is Selected",
      "# __context__     = [\"Walls\", \"Floors\", \"Roofs\"] # Make your button available only when certain categories are selected. Or Revit/View Types.",
      "",
      "# 🔗 For extra bundle metadata : https://pyrevitlabs.notion.site/Bundle-Metadata-9fa4911c14fa49c48e715421400f1427",
      "# 🔗 For extra bundle context : https://pyrevitlabs.notion.site/Bundle-Context-630fa1f3611f4ee0aa15d290275e7ef3",
      "",
      "# ╦╔╦╗╔═╗╔═╗╦═╗╔╦╗╔═╗",
      "# ║║║║╠═╝║ ║╠╦╝ ║ ╚═╗",
      "# ╩╩ ╩╩  ╚═╝╩╚═ ╩ ╚═╝ IMPORTS 📚",
      "# ==================================================",
      "# Regular + Autodesk",
      "import os, sys, math, datetime, time # Regular Imports",
      "from Autodesk.Revit.DB import * # Import everything from DB or Import only classes that are used. (from Autodesk.Revit.DB import Transaction, FilteredElementCollector)",
      "",
      "# pyRevit",
      "from pyrevit import revit, forms # import pyRevit modules.",
      "",
      "# Custom Imports",
      "# from Snippets._selection import get_selected_elements # lib import",
      "# from Snippets._convert import convert_internal_to_m # lib import",
      "",
      "# .NET Imports",
      "import clr # Common Language Runtime. Makes .NET libraries accessible",
      "clr.AddReference(\"System\") # Reference System.dll for import.",
      "from System.Collections.Generic import List # List<ElementType>() <- it's special type of list from .NET framework that RevitAPI requires",
      "",
      "# ╦  ╦╔═╗╦═╗╦╔═╗╔╗ ╦  ╔═╗╔═╗",
      "# ╚╗╔╝╠═╣╠╦╝║╠═╣╠╩╗║  ║╣ ╚═╗",
      "#  ╚╝ ╩ ╩╩╚═╩╩ ╩╚═╝╩═╝╚═╝╚═╝ VARIABLES 📄",
      "# ==================================================",
      "doc   = __revit__.ActiveUIDocument.Document # Document class from RevitAPI that represents project. Used to Create, Delete, Modify and Query elements from the project.",
      "uidoc = __revit__.ActiveUIDocument # UIDocument class from RevitAPI that represents Revit project opened in the Revit UI.",
      "app   = __revit__.Application # Represents the Autodesk Revit Application, providing access to documents, options and other application wide data and settings.",
      "PATH_SCRIPT = os.path.dirname(__file__) # Absolute path to the folder where script is placed.",
      "",
      "# GLOBAL VARIABLES",
      "",
      "# - Place global variables here.",
      "",
      "# ╔═╗╦ ╦╔╗╔╔═╗╔╦╗╦╔═╗╔╗╔╔═╗",
      "# ╠╣ ║ ║║║║║   ║ ║║ ║║║║╚═╗",
      "# ╚  ╚═╝╝╚╝╚═╝ ╩ ╩╚═╝╝╚╝╚═╝ FUNCTIONS 🛠️",
      "# ==================================================",
      "",
      "# - Place local functions here. If you might use any functions in other scripts, consider placing it in the lib folder.",
      "",
      "# ╔═╗╦  ╔═╗╔═╗╔═╗╔═╗╔═╗",
      "# ║  ║  ╠═╣╚═╗╚═╗║╣ ╚═╗",
      "# ╚═╝╩═╝╩ ╩╚═╝╚═╝╚═╝╚═╝ CLASSES 📦",
      "# ==================================================",
      "",
      "# - Place local classes here. If you might use any classes in other scripts, consider placing it in the lib folder.",
      "",
      "# ╔╦╗╔═╗╦╔╗╔",
      "# ║║║╠═╣║║║║",
      "# ╩ ╩╩ ╩╩╝╚╝ MAIN 🎯",
      "# ==================================================",
      "# 📝 For input display: https://pyrevitlabs.notion.site/Effective-Input-ea95e95282a24ba9b154ef88f4f8d056",
      "# 🎨 For output display : https://pyrevitlabs.notion.site/Effective-Output-43baf34d2ca247ada8e040bcb86613a2",
      "# 📊 For data visualization : https://pyrevitlabs.notion.site/Visualizing-Data-fd778a0b67354ff581aa340619b87803",
      "",
      "if __name__ == '__main__':",
      "    # START CODE HERE",
      "",
      "    # AVOID  placing Transaction inside of your loops! It will drastically reduce performance of your script.",
      "    t = Transaction(doc,__title__) # 🔏 Transactions are context-like objects that guard any changes made to a Revit model.",
      "",
      "    # You need to use t.Start() and t.Commit() to make changes to a Project.",
      "    t.Start() # <- Transaction Start 🔓",
      "",
      "    #- CHANGES TO REVIT PROJECT HERE 🏡",
      "",
      "    t.Commit() # <- Transaction End 🔒",
      "",
      "    # Notify user that script is complete. 🔔",
      "    print('-' * 50)",
      "    print('Script is finished.')",
      "    print('🎉 Template has been developed by Baptiste LECHAT and inspired by Erik FRITS.')"
    ],
    "description": "pyRevit full template for creating pyRevit scripts."
  }
}
